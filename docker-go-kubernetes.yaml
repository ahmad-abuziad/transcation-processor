apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: server
  name: server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: server
  strategy: {}
  template:
    metadata:
      labels:
        service: server
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              'until nc -zv db 3306; do echo "waiting for db"; sleep 2; done;',
            ]
        - name: migrate-db
          image: migrate/migrate
          command:
            [
              "sh",
              "-c",
              "migrate -path=/migrations -database=\"root:supersecurepassword@(db:3306)/transaction_processor_db?parseTime=true\" up"
            ]
      containers:
        - env:
            - name: DSN
              value: root:supersecurepassword@(db:3306)/transaction_processor_db?parseTime=true
          image: ahmad0abuziad/transcation-processor
          name: server
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: db
  name: db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: db
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: supersecurepassword
            - name: MYSQL_DATABASE
              value: transaction_processor_db
          image: mysql:8
          name: db
          ports:
            - containerPort: 3306
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: server
  name: server
  namespace: default
spec:
  type: NodePort
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
      nodePort: 30001
  selector:
    service: server
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: db
  name: db
  namespace: default
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    service: db
status:
  loadBalancer: {}