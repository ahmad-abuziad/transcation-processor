services:
  migrate:
    image: migrate/migrate
    networks:
      - net
    depends_on:
      db-server:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    entrypoint: [ "sh", "-c", "sleep 10 && migrate -source file:///migrations -database=\"mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(db-server:3306)/transaction_processor_db?parseTime=true\" up" ]
  rest-server:
    depends_on:
      migrate:
        condition: service_completed_successfully
      db-server:
        condition: service_healthy
    build:
      context: .
    container_name: rest-server
    hostname: rest-server
    networks:
      - net
    ports:
      - 80:8080
    environment:
      - DSN=${DSN:?data source name is not set}
    deploy:
      restart_policy:
        condition: on-failure
  db-server:
    image: mysql:8
    container_name: db-server
    hostname: db-server
    networks:
      - net
    ports:
      - 3306:3306
      - 8080:8080
    volumes:
      - db-vol:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      retries: 5
      start_period: 10s
volumes:
  db-vol:

networks:
  net:
    driver: bridge
